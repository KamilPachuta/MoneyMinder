@using MoneyMinderClient.Core
@using MoneyMinderClient.Services.Interfaces
@using MoneyMinderContracts.Requests.CurrencyAccounts.Validators

@using MoneyMinderContracts.Requests.CurrencyAccounts
@inject ICurrencyAccountService CurrencyService


<MudDialog DisableSidePadding="true">
    <DialogContent>
        <MudContainer Style="max-height: 500px; overflow-y: scroll; width:  350px; overflow-x:auto ">
            @* <MudCard Elevation="4"> *@
            @*     <MudCardHeader> *@
            @*             <MudText Typo="Typo.h5">Currency Account</MudText> *@
            @*     </MudCardHeader> *@
            @*     <MudCardContent> *@
            @*         $1$ <MudPaper MaxWidth="true"> #1# *@
            @*         $1$         <MudTextField T="string" Counter="25" Immediate="true" Validation="@(new Func<string, IEnumerable<string>>(MaxCharacters))" Label="Name" Variant="Variant.Outlined" /> #1# *@
            @*         $1$ </MudPaper> #1# *@
            @*         <MudForm Model="_request" @ref="@form" Validation="@(_validator.ValidateValue)" ValidationDelay="0"> *@
            @*             <MudTextField bind-Value="_request.Name"  *@
            @*                           For="(() => _request.Name)"  *@
            @*                           Immediate="true"  *@
            @*                           Label="Currency Account Name"  *@
            @*                           Variant="Variant.Outlined" /> *@
            @*             *@
            @*         </MudForm> *@
            @*             *@
            @*     </MudCardContent> *@
            @*     <MudCardActions> *@
            @*         <MudIconButton Icon="@Icons.Material.Filled.DoneOutline" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Large" OnClick="Submit"/> *@
            @*         <MudIconButton Icon="@Icons.Material.Filled.Cancel" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Large" OnClick="CloseDialog"/> *@
            @*     </MudCardActions> *@
            @* *@
            @* </MudCard> *@

                        <MudText Typo="Typo.h5">Currency Account</MudText>

                    <MudForm Model="_request" @ref="@form" Validation="@ValidationAdapter.ValidateValue(_validator)" ValidationDelay="0">
                        <MudTextField @bind-Value="_request.Name" 
                                      For="@(() => _request.Name)" 
                                      Immediate="true" 
                                      Label="Currency Account Name" 
                                      Variant="Variant.Outlined" />
                       
                    </MudForm>
                       

                    

        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudIconButton Icon="@Icons.Material.Filled.DoneOutline" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Large" OnClick="Submit"/>
        <MudIconButton Icon="@Icons.Material.Filled.Cancel" Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Large" OnClick="CloseDialog"/>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] 
    IMudDialogInstance MudDialog { get; set; }

    MudForm form = new();
    
    CreateCurrencyAccountRequest _request = new();
    CreateCurrencyAccountValidator _validator = new();

    private void CloseDialog()
    {
        MudDialog.Close(DialogResult.Cancel());
    }
    
    private async Task Submit()
    {
        await form.Validate();

        if (form.IsValid)
        {
            var result = await CurrencyService.PostCurrencyAccountAsync(_request);

            MudDialog.Close(DialogResult.Ok(result));
        }
    }
}